#include "highmap.hpp"

int main(void)
{
  hmap::Vec2<int> shape = {256, 256};
  // shape = {512, 512};
  // shape = {1024, 1024};
  hmap::Vec2<float> res = {2.f, 2.f};
  int               seed = 1;

  hmap::Array z = hmap::noise_fbm(hmap::NoiseType::PERLIN, shape, res, seed);
  hmap::remap(z);
  // hmap::zeroed_edges(z);
  auto z0 = z;

  // talus limit defined locally
  float talus = 4.f / (float)shape.x;
  auto  talus_map = z;
  // hmap::remap(talus_map, talus / 10.f, talus);
  talus_map = talus;

  int iterations = 30;

  hmap::Array softness(shape, 1.f) = z; //hmap::noise_fbm(hmap::NoiseType::PERLIN, shape, res, ++seed);
  
  // hmap::hydraulic_stream(z, 0.05f, talus);

  for (int k = 0; k < 1; k++)
  {
    hmap::hydraulic_schott(z, talus_map, softness, iterations);
    hmap::thermal_schott(z, talus_map, 50);
    // hmap::sediment_deposition_schott(z, talus_map, iterations);
  }

  z.infos();

  z.to_png("hmap.png", hmap::Cmap::GRAY, false, CV_16U);
  
  hmap::remap(z, z0.min(), z0.max());

  hmap::export_banner_png("ex_sediment_deposition_schott.png",
                          {z0, z},
                          hmap::Cmap::TERRAIN,
                          true);
}
